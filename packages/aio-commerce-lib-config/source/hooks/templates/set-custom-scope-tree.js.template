/*
Copyright 2025 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

// This file is auto-generated by the pre-app-build hook
// Do not modify this file directly

const { init, createErrorResponse, createSuccessResponse } = require('@adobe/aio-commerce-lib-config');

/**
 * Set custom scope tree - replace all custom scopes with provided ones
 * @param {object} params - The input parameters containing scopes array
 * @returns {Promise<object>} The response object containing updated custom scopes
 */
async function main(params) {
  try {
    const scopes = params.scopes;
    if (!scopes) {
      return createErrorResponse(400, 'INVALID_REQUEST',
        'Request must include scopes parameter',
        'Expected: { scopes: [array of scope objects] }'
      );
    }

    const request = { scopes };
    const lib = init();
    const result = await lib.setCustomScopeTree(request);

    return createSuccessResponse(200, result, {
      'Cache-Control': 'no-store'
    });
  } catch (error) {
    if (error instanceof Error && error.isValidationError) {
      return createErrorResponse(400, 'VALIDATION_ERROR', 'Invalid request data', error.message);
    }

    return createErrorResponse(500, 'INTERNAL_ERROR',
      'An internal server error occurred while updating custom scope tree',
      error instanceof Error ? error.message : 'Unknown error'
    );
  }
}

exports.main = main;
